[{"/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/index.js":"1","/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/reportWebVitals.js":"2","/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/App.js":"3","/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/pages/List/List.js":"4","/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/components/Nav/Nav.js":"5","/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/components/ItemAdder/ItemAdder.js":"6","/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/pages/GroceryItem/GroceryItem.js":"7","/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/components/GroceryListItem/GroceryListItem.js":"8"},{"size":501,"mtime":1607464514552,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607462571873,"results":"11","hashOfConfig":"10"},{"size":477,"mtime":1607468021546,"results":"12","hashOfConfig":"10"},{"size":4048,"mtime":1607476682644,"results":"13","hashOfConfig":"10"},{"size":471,"mtime":1607467742340,"results":"14","hashOfConfig":"10"},{"size":2583,"mtime":1607477591481,"results":"15","hashOfConfig":"10"},{"size":771,"mtime":1607473497693,"results":"16","hashOfConfig":"10"},{"size":951,"mtime":1607478557204,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1420jji",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/index.js",[],["37","38"],"/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/reportWebVitals.js",[],"/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/App.js",[],"/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/pages/List/List.js",["39","40"],"import React, { useState, useEffect, useCallback } from 'react';\nimport ItemAdder from '../../components/ItemAdder/ItemAdder';\nimport GroceryListItem from '../../components/GroceryListItem/GroceryListItem';\nimport './List.scss';\n\nexport default function List() {\n    const [items, setItems] = useState(null);\n    const [listFilter, setListFilter] = useState('abc');\n    const [itemsChanged, setItemsChanged] = useState(false);\n\n    useEffect(() => {\n        // Ensure we have local storage set up and running on page load. If not, we create it.\n        if (items === null) {\n            console.log('Items not instantiated. Loading...');\n            const localList = window.localStorage.getItem(\"shoppingList\");\n            if (localList === null) {\n                console.log('instantiating localStorage');\n                localStorage.setItem('shoppingList', JSON.stringify([]));\n                setItems([]);\n                toggleItemsChanged();\n            } else {\n                setItems(JSON.parse(localList));\n                toggleItemsChanged();\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        const localList = window.localStorage.getItem(\"shoppingList\");\n        setItems(JSON.parse(localList));\n    }, [itemsChanged]);\n\n    function deleteListItem(itemId) {\n        const itemIndex = items.findIndex(groceryItem => groceryItem.id === itemId);\n\n        if (itemIndex !== -1) {\n            items.splice(itemIndex, 1);\n            localStorage.setItem('shoppingList', JSON.stringify(items));\n            toggleItemsChanged();\n        }\n    }\n\n    function createNewListItem(item) {\n        const localList = JSON.parse(window.localStorage.getItem(\"shoppingList\"));\n        localList.push(item);\n        window.localStorage.setItem('shoppingList', JSON.stringify(localList));\n        setItems(localList);\n        setItemsChanged(!itemsChanged);\n    }\n\n    const generateFilteredShoppingList = useCallback(() => {\n        const itemsCopy = items;\n        /* Function that handles the list filters and maps the GroceryList accordingly. */\n        if (!items || items.length === 0) {\n            return <h4>There's nothing here yet. Add an item!</h4>;\n        }\n        // Sort list items before we return.\n        switch (listFilter) {\n          case \"abc\":\n              itemsCopy.sort((a, b) => a.name.localeCompare(b.name));\n            break;\n          case \"zxy\":\n              itemsCopy.sort(function (a, b) {\n                  if (a.name < b.name) {\n                      return 1;\n                  }\n                  if (a.name > b.name) {\n                      return -1;\n                  } else {\n                    return 0;\n                  }\n              });\n            break;\n          case \"123\":\n              itemsCopy.sort((a, b) => b.priority - a.priority);\n            break;\n          case \"321\":\n              itemsCopy.sort((a, b) => a.priority - b.priority);\n            break;\n            default:\n                // Do nothing\n            break;\n        } \n            return (\n            <ul className=\"shopping-list\">\n                {itemsCopy.map((item, idx) => {\n                return <GroceryListItem item={item} key={idx} deleteItem={deleteListItem}/>;\n                })}\n            </ul>\n            );\n    }, [listFilter, itemsChanged]);\n\n    function toggleItemsChanged() {\n      setItemsChanged(!itemsChanged);\n    }\n\n    return (\n      <div className=\"list-page\">\n        <h1>Your shopping list</h1>\n        <ItemAdder addItem={createNewListItem} />\n        <div className=\"filter-dropdown\">\n          <label>Sort by: </label>\n          <select\n            value={listFilter}\n            onChange={(e) => setListFilter(e.target.value)}\n          >\n            <option value=\"abc\">Alphabetical</option>\n            <option value=\"zxy\">Reverse Alphabetical</option>\n            <option value=\"123\">Priority</option>\n            <option value=\"321\">Reverse Priority</option>\n          </select>\n        </div>\n        {generateFilteredShoppingList()}\n      </div>\n    );\n}","/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/components/Nav/Nav.js",[],"/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/components/ItemAdder/ItemAdder.js",[],"/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/pages/GroceryItem/GroceryItem.js",["41"],"import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nexport default function GroceryEntry() {\n    const { groceryItemId } = useParams('id');\n    const [item, setItem] = useState(null);\n\n    useEffect(() => {\n      if (!item) {\n        const localList = JSON.parse(localStorage.getItem(\"shoppingList\"));\n        if (localList) {\n            const listItem = localList.filter((_listItem) => _listItem.id === groceryItemId);\n            if (listItem) {\n            setItem(listItem);\n            }\n        }\n      }\n    }, [item, groceryItemId]);\n\n    return (\n        <div class=\"grocery-item-page\">\n            <h3>{groceryItemId}</h3>\n            <div className=\"manage-item\">\n\n            </div>\n        </div>\n    )\n}","/Users/james/Coding/goji/interview-grocery-list/grocery-list/src/components/GroceryListItem/GroceryListItem.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":26,"column":8,"nodeType":"48","endLine":26,"endColumn":10,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":91,"column":8,"nodeType":"48","endLine":91,"endColumn":34,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":21,"nodeType":"54","messageId":"55","endLine":2,"endColumn":25},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'items' and 'toggleItemsChanged'. Either include them or remove the dependency array.","ArrayExpression",["58"],"React Hook useCallback has missing dependencies: 'deleteListItem' and 'items'. Either include them or remove the dependency array.",["59"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [items, toggleItemsChanged]",{"range":"64","text":"65"},"Update the dependencies array to be: [items, listFilter, deleteListItem]",{"range":"66","text":"67"},[1091,1093],"[items, toggleItemsChanged]",[3285,3311],"[items, listFilter, deleteListItem]"]